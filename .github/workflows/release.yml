# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run.
on:
  push:
    tags:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build
        run: docker-compose -f .devcontainer/docker-compose.yml build

      - name: Start services
        run: docker-compose -f .devcontainer/docker-compose.yml up -d vscode

      - name: Init env
        run: docker-compose -f .devcontainer/docker-compose.yml exec -T -u root -w /workspace vscode make init

      - uses: FranzDiebold/github-env-vars-action@v2
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
        run: |
          docker-compose -f .devcontainer/docker-compose.yml exec -T -u root -w /workspace vscode git reset --hard
          docker-compose -f .devcontainer/docker-compose.yml exec -e GITHUB_TOKEN=${GITHUB_TOKEN} -T -u root vscode bash -c 'echo "GITHUB_TOKEN: ${GITHUB_TOKEN}" > ~/.github.yml'
          docker-compose -f .devcontainer/docker-compose.yml exec -T -u root vscode bash -c 'echo "DOCKERHUB_USER: cgibot" > ~/.dockerhub.yml'
          docker-compose -f .devcontainer/docker-compose.yml exec -e DOCKERHUB_PASS=${DOCKERHUB_PASS} -T -u root vscode bash -c 'echo "DOCKERHUB_PASS: ${DOCKERHUB_PASS}" >> ~/.dockerhub.yml'
          docker-compose -f .devcontainer/docker-compose.yml exec \
            -T \
            -u root \
            -w /workspace \
            -e PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/go/bin:/home/vscode/go/bin:/workspace/bin \
            vscode \
            neon -props "{tag: ${CI_ACTION_REF_NAME}, MODULE: github.com/${CI_REPOSITORY,,}, BY: ${CI_ACTOR}, dockerfiles: {'Dockerfile': '.'}, latest: true}" publish docker-push
      - name: Test version
        run: docker-compose -f .devcontainer/docker-compose.yml exec -T -u root vscode /workspace/bin/dist/cmd/pimo_linux_amd64/pimo --version
