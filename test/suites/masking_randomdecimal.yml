name: random decimal features
testcases:
- name: random decimal
  steps:
  - script: rm -f masking.yml
  - script: |-
      cat > masking.yml <<EOF
      version: "1"
      masking:
        - selector:
            jsonpath: "amount"
          mask:
            randomDecimal:
              min: 0
              max: 9
              precision: 3
      EOF
  - script: |-
      echo '{"amount": 38}' | pimo
    assertions:
    - result.code ShouldEqual 0
    - result.systemoutjson.amount ShouldNotEqual 38
    - result.systemoutjson.amount ShouldBeBetweenOrEqual 0 9
    - result.systemerr ShouldBeEmpty
- name: random decimal should not mask the same way
  steps:
  - script: rm -f masking.yml
  - script: |-
      cat > masking.yml <<EOF
      version: "1"
      masking:
        - selector:
            jsonpath: "amount"
          mask:
            randomDecimal:
              min: 0
              max: 9
              precision: 3
      EOF
  - script: |-
      echo '{"amount": 38}' | pimo --repeat=10 > first.txt
  - script: |-
      echo '{"amount": 38}' | pimo --repeat=10 > second.txt
  - script: |-
      diff first.txt second.txt
    assertions:
    - result.systemout ShouldNotBeEmpty
  - script: rm -f first.txt
  - script: rm -f second.txt

- name: muliple random decimal with same source mask
  steps:
  - script: rm -f masking.yml
  - script: |-
      cat > masking.yml <<EOF
      version: "1"
      seed: 3
      masking:
        - selector:
            jsonpath: "name"
          mask:
            randomDecimal:
              min: 0
              max: 10
              precision: 2
        - selector:
            jsonpath: "name2"
          mask:
            randomDecimal:
              min: 0
              max: 10
              precision: 2
      EOF
  - script: |-
      echo '{"name": "Toto", "name2": ""}' | pimo
    assertions:
    - result.code ShouldEqual 0
    - result.systemoutjson.name ShouldNotEqual 7.2
    - result.systemoutjson.name ShouldEqual 1.67
    - result.systemoutjson.name2 ShouldNotEqual 7.2
    - result.systemoutjson.name2 ShouldEqual 9.33
    - result.systemerr ShouldBeEmpty

- name: random decimal with seeder
  steps:
  - script: rm -f masking.yml
  - script: |-
      cat > masking.yml <<EOF
      version: "1"
      masking:
        - selector:
            jsonpath: "amount"
          mask:
            randomDecimal:
              min: 0
              max: 9
              precision: 3
          seed:
            field: "amount"
      EOF
  - script: |-
      echo -e '{"amount":1}\n{"amount":2}\n{"amount":3}\n{"amount":2}\n{"amount":1}\n{"amount":3}' | pimo | head -c -1 | tr '\n' ' '
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldEqual {"amount":1.306} {"amount":5.474} {"amount":4.137} {"amount":5.474} {"amount":1.306} {"amount":4.137}
    - result.systemerr ShouldBeEmpty
