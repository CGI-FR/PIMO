name: template features
testcases:
- name: template mask
  steps:
  - script: rm -f masking.yml
  - script: cp ../masking_template.yml masking.yml
  - script: |-
      echo '{"mail": "jean-bonbeur@hotmail.fr", "name": "jean", "surname": "bonbeur"}' | pimo
    assertions:
    - result.code ShouldEqual 0
    - result.systemoutjson.mail ShouldEqual bonbeur.jean@gmail.com
    - result.systemerr ShouldBeEmpty
- name: template format to lower
  steps:
  - script: rm -f masking.yml
  - script: cp ../masking_template_lower.yml masking.yml
  - script: |-
      echo '{"mail": "jean-bonbeur@hotmail.fr", "name": "JEAN", "surname": "BoNbEuR"}' | pimo
    assertions:
    - result.code ShouldEqual 0
    - result.systemoutjson.mail ShouldEqual bonbeur.jean@gmail.com
    - result.systemoutjson.mail ShouldNotEqual BoNbEuR.JEAN@gmail.com
    - result.systemerr ShouldBeEmpty
- name: template format without accent and to lower
  steps:
  - script: rm -f masking.yml
  - script: cp ../masking_template_noacc.yml masking.yml
  - script: |-
      echo '{"mail": "jean-bonbeur@hotmail.fr", "name": "Léa", "surname": "Noël"}' | pimo
    assertions:
    - result.code ShouldEqual 0
    - result.systemoutjson.mail ShouldEqual noel.lea@gmail.com
    - result.systemoutjson.mail ShouldNotEqual Noël.Léa@gmail.com
    - result.systemerr ShouldBeEmpty

- name: template with range over slice
  steps:
  - script: rm -f masking.yml
  - script: cp ../masking_template_range.yml masking.yml
  - script: |-
      pimo > result.json <<EOF
      {"REL_PERMIS":[{"ID_PERMIS":1}],"PERMIS":""}
      EOF
    assertions:
    - result.code ShouldEqual 0
    - result.systemerr ShouldBeEmpty
  - script : |-
      cat > expected.json <<EOF
      {"REL_PERMIS":[{"ID_PERMIS":1}],"PERMIS":"{\"id\": 1,\"type\":\"PERMIS\"}"}
      EOF
  - script: diff expected.json result.json
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldBeEmpty

- name: template with calls to other masks
  steps:
  - script: rm -f masking.yml
  - script: cp ../masking_template_masks.yml masking.yml
  - script: |-
      FF1_ENCRYPTION_KEY="70NZ2NWAqk9/A21vBPxqlA==" pimo > result.json <<EOF
      {"regex": ""}
      EOF
    assertions:
    - result.code ShouldEqual 0
    - result.systemerr ShouldBeEmpty
  - script : |-
      cat > expected.json <<EOF
      {"regex":"05 30 85 92 14 / 04 40 20 85 81","randomChoice":"Marcelle","randomChoiceInUri":"Vincent","randomInt":"26","randomDecimal":"6.43","command":"Dorothy","weightedChoice":"Dupond","hash":"Ruby City","hashInUri":"Nathanaëlle","randDate":"2011-12-26 18:17:55 +0000 UTC","duration":"2011-12-24 19:17:55 +0000 UTC","dateParser":"29/07/22","randomDuration":"2011-12-03 06:48:40.768721325 +0000 UTC","ff1":"483494431","range":"[25;29]"}
      EOF
  - script: diff expected.json result.json
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldBeEmpty

