name: pimo mock feature
testcases:

  - name: no routes config
    steps:
      - script: |
          pimo --serve ":8080" --seed 1 --mask 'name=[{add: true}, {randomChoiceInUri: "pimo://nameFR"}]' &
          pimo -v5 mock -p :8081 http://localhost:8080 &
          sleep 1
          curl -s http://localhost:8080
          kill %1 %2
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldContainSubstring {"name":"GwenaÃ«lle"}
          - result.systemerr ShouldContainSubstring no such file or directory

  - name: intercept response
    steps:
      - script: |-
          cat > routes.yaml <<EOF
          routes:
          - method: "GET"
            path: "/"
            masking:
              response: "response.yaml"
          EOF
      - script: |-
          cat > response.yaml <<EOF
          version: "1"
          masking:
            - selector:
                jsonpath: "body.name"
              mask:
                constant: "intercepted!"
          EOF
      - script: |
          pimo --serve ":8080" --seed 1 --mask 'name=[{add: true}, {randomChoiceInUri: "pimo://nameFR"}]' &
          pimo -v5 mock -p :8081 http://localhost:8080 &
          sleep 1
          curl -s http://localhost:8081
          kill %1 %2
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldContainSubstring {"name":"intercepted!"}

  - name: intercept request
    steps:
      - script: |-
          cat > routes.yaml <<EOF
          routes:
          - method: "GET"
            path: "/{name}"
            masking:
              request: "request.yaml"
          EOF
      - script: |-
          cat > request.yaml <<EOF
          version: "1"
          masking:
            - selector:
                jsonpath: "captures.name"
              mask:
                constant: "intercepted"
          EOF
      - script: |
          pimo --serve ":8080" --seed 1 --mask 'name=[{add: true}, {randomChoiceInUri: "pimo://nameFR"}]' &
          pimo -v5 mock -p :8081 http://localhost:8080 &
          sleep 1
          curl -s http://localhost:8081/hello
          kill %1 %2
        assertions:
          - result.code ShouldEqual 0
          - result.systemerr ShouldContainSubstring Origin request={"body":"","captures":{"name":"hello"},"headers":{"Accept":["*/*"],"User-Agent":["curl/8.9.1"]},"method":"GET","protocol":"HTTP/1.1","url":{"path":"/hello"}}
          - result.systemerr ShouldContainSubstring Masked request={"body":"","captures":{"name":"intercepted"},"headers":{"Accept":["*/*"],"User-Agent":["curl/8.9.1"]},"method":"GET","protocol":"HTTP/1.1","url":{"path":"/intercepted"}}
