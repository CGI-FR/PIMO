name: new_field features
testcases:
- name: adding field mask
  steps:
  - script: rm -f masking.yml
  - script: |-
      cat > masking.yml <<EOF
      version: "1"
      masking:
        - selector:
            jsonpath: "newfield"
          mask:
            add: "newvalue"
      EOF
  - script: |-
      echo '{"name": "Toto"}' | pimo
    assertions:
    - result.code ShouldEqual 0
    - result.systemoutjson.name ShouldEqual Toto
    - result.systemoutjson.newfield ShouldEqual newvalue
    - result.systemerr ShouldBeEmpty

- name: adding structure of fields
  steps:
  - script: rm -f masking.yml
  - script: |-
      cat > masking.yml <<EOF
      version: "1"
      seed: 1
      masking:
        - selector:
            jsonpath: "segments"
          masks:
            - add: ""
            - randomChoice:
              - [{}]
              - [{}, {}]
              - [{}, {}, {}]
            - pipe:
                masking:
                  - selector:
                      jsonpath: "person"
                    mask:
                      add:
                        - name: "name"
                        - age: 0
                        - city: "city"
      EOF
  - script: |-
      pimo --empty-input
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldEqual {"segments":[{"person":[{"name":"name"},{"age":0},{"city":"city"}]},{"person":[{"name":"name"},{"age":0},{"city":"city"}]}]}
    - result.systemerr ShouldBeEmpty
