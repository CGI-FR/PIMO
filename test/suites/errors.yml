name: error features
testcases:

  - name: default error
    steps:
      - script: rm -f masking.yml
      - script: |-
          cat > masking.yml <<EOF
          version: "1"
          masking:
            - selector:
                jsonpath: "date"
              mask:
                duration: "-P2D"
          EOF
      - script: |-
          echo -e '{"date": "Toto"}\n{"date": "2020-01-01T00:00:00Z"}' | pimo
        assertions:
          - result.code ShouldEqual 4
          - result.systemout ShouldBeEmpty
          - result.systemerr ShouldContainSubstring cannot parse

  - name: skip line on error
    steps:
      - script: rm -f masking.yml
      - script: |-
          cat > masking.yml <<EOF
          version: "1"
          masking:
            - selector:
                jsonpath: "date"
              mask:
                duration: "-P2D"
          EOF
      - script: |-
          echo -e '{"date": "Toto"}\n{"date": "2020-01-01T00:00:00Z"}' | TZ="" pimo --skip-line-on-error
        assertions:
          - result.code ShouldEqual 0
          - |
            result.systemout ShouldEqual '{"date":"2019-12-30T00:00:00Z"}'

  - name: skip line on error with log file
    steps:
      - script: rm -f masking.yml
      - script: |-
          cat > masking.yml <<EOF
          version: "1"
          masking:
            - selector:
                jsonpath: "date"
              mask:
                duration: "-P2D"
          EOF
      - script: |-
          echo -e '{"date": "Toto"}\n{"date": "2020-01-01T00:00:00Z"}' | TZ="" pimo --skip-line-on-error --skip-log-file errors.jsonl
        assertions:
          - result.code ShouldEqual 0
          - |
            result.systemout ShouldEqual '{"date":"2019-12-30T00:00:00Z"}'
      - script: cat errors.jsonl
        assertions:
          - |
            result.systemout ShouldEqual '{"date": "Toto"}'
