name: pipe mask
testcases:
- name: simple pipe with parent context
  steps:
  - script: rm -f masking.yml
  - script: cp ../masking_pipe.yml masking.yml
  - script: |-
      echo '{"organizations":[{"domain":"company.com","persons":[{"name":"leona","surname":"miller","email":""},{"name":"joe","surname":"davis","email":""}]}]}' | pimo
    assertions:
    - result.code ShouldEqual 0
    - >
      result.systemout ShouldEqual {"organizations":[{"domain":"company.com","persons":[{"email":"leona.miller@company.com","name":"Leona","surname":"Miller"},{"email":"joe.davis@company.com","name":"Joe","surname":"Davis"}]}]}
    - result.systemerr ShouldBeEmpty
- name: simple pipe with cache
  steps:
  - script: rm -f masking.yml
  - script: |-
      cat > masking.yml <<EOF
      version: "1"
      seed: 42
      masking:
        - selector:
            jsonpath: "age"
          cache: "age"
          mask:
            randomInt:
              min: 0
              max: 100
        - selector:
            jsonpath: "related"
          mask:
            pipe:
              masking:
                - selector:
                    jsonpath: "age"
                  cache: "age"
                  mask:
                    randomInt:
                      min: 0
                      max: 100
      caches:
        age : {}
      EOF
  - script: |-
      pimo <<EOF
      {"age": 10, "related": [{"age":30}]}
      {"age": 20, "related": [{"age":40}]}
      {"age": 30, "related": [{"age":10}]}
      {"age": 40, "related": [{"age":20}]}
      EOF
    assertions:
    - result.code ShouldEqual 0
    - 'result.systemout ShouldContainSubstring {"age":91,"related":[{"age":4}]}'
    - 'result.systemout ShouldContainSubstring {"age":25,"related":[{"age":46}]}'
    - 'result.systemout ShouldContainSubstring {"age":4,"related":[{"age":91}]}'
    - 'result.systemout ShouldContainSubstring {"age":46,"related":[{"age":25}]}'
    - result.systemerr ShouldBeEmpty
- name: pipe to another file
  steps:
  - script: rm -f masking.yml
  - script: |-
      cat > masking.yml <<EOF
      version: "1"
      seed: 42
      masking:
        - selector:
            jsonpath: "tab"
          mask:
            pipe:
              injectRoot: "root"
              injectParent: "parent"
              file: "./masking-sub.yml"
      EOF
  - script: rm -f masking-sub.yml
  - script: |-
      cat > masking-sub.yml <<EOF
      version: "1"
      seed: 42
      masking:
        - selector:
            jsonpath: "temp"
          mask:
            add: ""
        - selector:
            jsonpath: "temp"
          mask:
            regex: "0[1-7]( ([0-9]){2}){4}"
      EOF
  - script: |-
      pimo <<EOF
      {"tab": [{}]}
      {"tab": [{}]}
      {"tab": [{}]}
      {"tab": [{}]}
      {"tab": []}
      {"tab": [{},{}]}
      EOF
    assertions:
    - result.code ShouldEqual 0
    - 'result.systemout ShouldContainSubstring {"tab":[{"temp":"02 26 23 74 91"}]}'
    - 'result.systemout ShouldContainSubstring {"tab":[{"temp":"02 25 90 13 69"}]}'
    - 'result.systemout ShouldContainSubstring {"tab":[{"temp":"01 61 06 82 72"}]}'
    - 'result.systemout ShouldContainSubstring {"tab":[{"temp":"06 45 57 96 58"}]}'
    - 'result.systemout ShouldContainSubstring {"tab":[]}'
    - 'result.systemout ShouldContainSubstring {"tab":[{"temp":"03 56 57 55 10"},{"temp":"06 94 01 79 31"}]}'
    - result.systemerr ShouldBeEmpty
